{"version":3,"sources":["playground/examplesImg sync /^/gallery.*/.jpg$","playground/examplesImg/gallery0.jpg","playground/examplesImg/gallery1.jpg","playground/examplesImg/gallery2.jpg","playground/examplesImg/gallery3.jpg","playground/examplesImg/gallery4.jpg","playground/examplesImg/gallery5.jpg","playground/examplesImg/gallery6.jpg","spec sync /^/.*/.json$","playground/Chart.js","playground/examplesData.js","playground/Examples.js","playground/EditPannel.js","playground/index.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Chart","props","resizeChart","size_temp","window","outerHeight","setState","chartSize","state","spec","this","vis","NarrativeChart","container","load","generate","addEventListener","stop","removeEventListener","height","width","chart","size","style","marginLeft","marginTop","borderStyle","borderWidth","borderColor","transform","display","flexDirection","alignItems","Component","exampleData","title","chartType","specJson","Examples","exampleLaunch","compressResult","LZString","compressToBase64","JSON","stringify","location","href","reload","data_temp","className","d","index","url","require","key","src","alt","onClick","EditPannel","endEditing","node","onEndEdit","parse","innerText","error","console","log","syntaxHighlight","json","undefined","replace","match","cls","test","dangerouslySetInnerHTML","__html","ref","contentEditable","suppressContentEditableWarning","onBlur","Playground","changeStatus","event","specs","status","target","value","changeStaticSpec","changeSize","assign","updateChart","document","getElementsByTagName","exportClick","exportCancle","shareClick","jsonText","shareLink","shareCancle","copy","message","success","content","openLink","open","examplesClick","examplesCancle","showGallary","history","push","covertSVG2Png","getElementById","domtoimage","toBlob","then","blob","saveAs","covertSVG2json","fixJson","a","createElement","download","click","covertSVG2svg","svg","querySelector","svgHtml","outerHTML","base64doc","btoa","decodeURIComponent","encodeURIComponent","MouseEvent","dispatchEvent","covertSVG2pdf","Promise","reject","graph","pdf","jsPDF","pdfCanvas","setAttribute","svgAsPngUri","dataURI","addImage","save","covertSVG2html","locationHash","hash","split","length","substr","decompressFromBase64","displayview","shownspec","exact","path","render","visible","centered","onOk","onCancel","top","footer","React","Boolean","hostname","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.75083ad8.chunk.js","sourcesContent":["var map = {\n\t\"./gallery0.jpg\": 207,\n\t\"./gallery1.jpg\": 208,\n\t\"./gallery2.jpg\": 209,\n\t\"./gallery3.jpg\": 210,\n\t\"./gallery4.jpg\": 211,\n\t\"./gallery5.jpg\": 212,\n\t\"./gallery6.jpg\": 213\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 206;","module.exports = __webpack_public_path__ + \"static/media/gallery0.55177e0e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery1.696f9879.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery2.e41301ce.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery3.5dc7da1a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery4.a957e188.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery5.65aa10b5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery6.3bed02d3.jpg\";","var map = {\n\t\"./barchart.json\": 269,\n\t\"./bubblemap.json\": 270,\n\t\"./linechart.json\": 271,\n\t\"./piechart.json\": 272,\n\t\"./scatterplot.json\": 109,\n\t\"./test.json\": 273,\n\t\"./text.json\": 274,\n\t\"./unitvis.json\": 275\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 268;","import React, { Component } from 'react';\r\n// import { NarrativeChart } from '../vis';\r\nimport {NarrativeChart} from 'narchart'\r\nimport './playground.css';\r\n\r\nexport default class Chart extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n       \r\n        this.state = {\r\n            chartSize:1\r\n        };\r\n      }\r\n\r\n    componentDidMount() {\r\n        let spec = this.props.spec;\r\n        let container = \"#demo-chart\";\r\n        this.vis = new NarrativeChart();\r\n        this.vis.container(container);\r\n        this.vis.load(spec);\r\n        this.vis.generate();\r\n        window.addEventListener(\"resize\", this.resizeChart)\r\n        this.setState({\r\n            chartSize: (window.outerHeight-92)/770\r\n        })\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        let container = \"#demo-chart\";\r\n        let spec = this.props.spec;\r\n        this.vis.container(container);\r\n        this.vis.stop()\r\n        this.vis.load(spec);\r\n        this.vis.generate();\r\n    }\r\n    componentWillUnmount(){\r\n        window.removeEventListener('resize', this.resizeChart)\r\n    }\r\n    resizeChart=()=>{\r\n        let h = window.outerHeight;\r\n        let size_temp = (h -92)/770;\r\n        this.setState({\r\n            chartSize:size_temp\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {chartSize} =this.state;\r\n        let height = 640, width = 640;\r\n        if (this.props.spec.chart) {\r\n            let size = this.props.spec.chart.size;\r\n            switch (size) {\r\n                case 'wide':\r\n                    height = 220;\r\n                    width = 560;\r\n                    break;\r\n                case 'middle':\r\n                    height = 200;\r\n                    width = 360;\r\n                    break;\r\n                case 'small':\r\n                    height = 150;\r\n                    width = 235;\r\n                    break;\r\n                case 'unitvis':\r\n                    height = 720;\r\n                    width = 680;\r\n                    break;               \r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        return (\r\n            <div id='frame' style={{ marginLeft: 30, marginTop: 30, height: height, width: width, borderStyle: 'solid', borderWidth: 1, borderColor: '#CCCCCD', transform:`translate(-350px,-350px) scale(${chartSize}) translate(350px,350px)` }}>\r\n                <div id='demo-chart'\r\n                    style={{\r\n                        height: height,\r\n                        width: width,\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        alignItems: \"center\",\r\n                        // justifyContent: \"center\"\r\n                    }} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","let exampleData=[\r\n    {   \r\n        title:\"Car sales over the years\",\r\n        chartType:\"scatterplot\",\r\n        specJson:{\r\n            \"data\": {\r\n                // \"url\": \"http://localhost:3000/spreadsheets/cars.csv\",\r\n                \"url\": \"https://narchart.github.io/editor/spreadsheets/cars.csv\",\r\n                \"schema\": [\r\n                  {\r\n                    \"field\": \"Name\",\r\n                    \"type\": \"categorical\"\r\n                  },\r\n                  {\r\n                    \"field\": \"Miles per Gallon\",\r\n                    \"type\": \"numerical\"\r\n                  },\r\n                  {\r\n                    \"field\": \"Cylinders\",\r\n                    \"type\": \"numerical\"\r\n                  },\r\n                  {\r\n                    \"field\": \"Displacement\",\r\n                    \"type\": \"numerical\"\r\n                  },\r\n                  {\r\n                    \"field\": \"Horsepower\",\r\n                    \"type\": \"numerical\"\r\n                  },\r\n                  {\r\n                    \"field\": \"Weight\",\r\n                    \"type\": \"numerical\"\r\n                  },\r\n                  {\r\n                    \"field\": \"Acceleration\",\r\n                    \"type\": \"numerical\"\r\n                  },\r\n                  {\r\n                    \"field\": \"Year\",\r\n                    \"type\": \"temporal\"\r\n                  },\r\n                  {\r\n                    \"field\": \"Origin\",\r\n                    \"type\": \"categorical\"\r\n                  }\r\n                ]\r\n              },\r\n              \"actions\": [\r\n                {\r\n                  \"add\": \"config\",\r\n                  \"mode\": \"dark\",\r\n                  \"emotion\": \"positive\",\r\n                  \"background-image\": \"https://narchart.github.io/editor/background/car_background2.png\"\r\n                },\r\n                {\r\n                  \"select\": [\r\n                    {\r\n                      \"field\": \"Horsepower\",\r\n                      \"aggregate\": \"max\"\r\n                    },\r\n                    {\r\n                      \"field\": \"Miles per Gallon\",\r\n                      \"aggregate\": \"max\"\r\n                    },\r\n                    {\r\n                      \"field\": \"Acceleration\",\r\n                      \"aggregate\": \"max\"\r\n                    },\r\n                    {\r\n                      \"field\": \"Weight\",\r\n                      \"aggregate\": \"max\"\r\n                    },\r\n                    {\r\n                      \"field\": \"Name\"\r\n                    },\r\n                    {\r\n                      \"field\": \"Origin\"\r\n                    }\r\n                  ],\r\n                  \"groupby\": [\r\n                    {\r\n                      \"field\": \"Name\"\r\n                    }\r\n                  ],\r\n                  \"filter\": []\r\n                },\r\n                {\r\n                  \"add\": \"chart\",\r\n                  \"mark\": {\r\n                    \"type\": \"point\",\r\n                    \"style\": {\r\n                      \"fill-opacity\": 0.5\r\n                    }\r\n                  },\r\n                  \"style\": {}\r\n                },\r\n                {\r\n                  \"add\": \"title\",\r\n                  \"style\": {\r\n                    \"text\": \"Some basic information about cars\",\r\n                    \"position\": \"left\",\r\n                    \"background-image\": \"https://narchart.github.io/editor/background/car_banner.png\",\r\n                    \"font-family\": \"Gil Sans\",\r\n                    \"font-weight\": \"bold\",\r\n                    \"font-size\": 30,\r\n                    \"font-color\": \"yellow\",\r\n                    \"font-style\": \"italic\"\r\n                  }\r\n                },\r\n                {\r\n                  \"add\": \"caption\",\r\n                  \"style\": {\r\n                    \"text\": \"The relationship between horsepower, miles per gallon and acceleration.\",\r\n                    \"font-family\": \"Gil Sans\",\r\n                    \"font-size\": 16,\r\n                    \"font-weight\": \"regular\",\r\n                    \"font-color\": \"#FFFFFF\",\r\n                    \"position\": \"left\"\r\n                  }\r\n                },\r\n                {\r\n                  \"add\": \"group\",\r\n                  \"actions\": [\r\n                    {\r\n                      \"add\": \"encoding\",\r\n                      \"channel\": \"x\",\r\n                      \"field\": \"Horsepower\"\r\n                    },\r\n                    {\r\n                      \"add\": \"encoding\",\r\n                      \"channel\": \"y\",\r\n                      \"field\": \"Miles per Gallon\"\r\n                    }\r\n                  ],\r\n                  \"animation\": {\r\n                    \"sync\": false,\r\n                    \"duration\": 1000\r\n                  }\r\n                },\r\n                {\r\n                  \"add\": \"encoding\",\r\n                  \"channel\": \"size\",\r\n                  \"field\": \"Acceleration\",\r\n                  \"animation\": {\r\n                    \"duration\": 1000\r\n                  }\r\n                },\r\n                {\r\n                  \"add\": \"annotation\",\r\n                  \"method\": \"desaturate\",\r\n                  \"target\": []\r\n                },\r\n                {\r\n                  \"add\": \"annotation\",\r\n                  \"method\": \"fill\",\r\n                  \"target\": [\r\n                    {\r\n                      \"field\": \"Name\",\r\n                      \"value\": \"mazda glc\"\r\n                    }\r\n                  ],\r\n                  \"style\": {\r\n                    \"color\": \"#F9CF00\"\r\n                  }\r\n                },\r\n                {\r\n                  \"add\": \"annotation\",\r\n                  \"method\": \"glow\",\r\n                  \"target\": [\r\n                    {\r\n                      \"field\": \"Name\",\r\n                      \"value\": \"mazda glc\"\r\n                    }\r\n                  ]\r\n                },\r\n                {\r\n                  \"add\": \"annotation\",\r\n                  \"method\": \"contour\",\r\n                  \"target\": [\r\n                    {\r\n                      \"field\": \"Name\",\r\n                      \"value\": \"mazda glc\"\r\n                    }\r\n                  ],\r\n                  \"style\": {\r\n                    \"stroke-width\": 3,\r\n                    \"color\": \"#FF7602\"\r\n                  }\r\n                }\r\n              ]\r\n        }\r\n    }, {   \r\n        title:\"Car sales over the years\",\r\n        chartType:\"scatterplot\",\r\n        specJson:{\r\n            \"data\": {\r\n                \"url\": \"https://narchart.github.io/editor/spreadsheets/cars.csv\",\r\n                \"schema\": [\r\n                  {\r\n                    \"field\": \"Name\",\r\n                    \"type\": \"categorical\"\r\n                  },\r\n                  {\r\n                    \"field\": \"Miles per Gallon\",\r\n                    \"type\": \"numerical\"\r\n                  },\r\n                  {\r\n                    \"field\": \"Cylinders\",\r\n                    \"type\": \"numerical\"\r\n                  },\r\n                  {\r\n                    \"field\": \"Displacement\",\r\n                    \"type\": \"numerical\"\r\n                  },\r\n                  {\r\n                    \"field\": \"Horsepower\",\r\n                    \"type\": \"numerical\"\r\n                  },\r\n                  {\r\n                    \"field\": \"Weight\",\r\n                    \"type\": \"numerical\"\r\n                  },\r\n                  {\r\n                    \"field\": \"Acceleration\",\r\n                    \"type\": \"numerical\"\r\n                  },\r\n                  {\r\n                    \"field\": \"Year\",\r\n                    \"type\": \"temporal\"\r\n                  },\r\n                  {\r\n                    \"field\": \"Origin\",\r\n                    \"type\": \"categorical\"\r\n                  }\r\n                ]\r\n              },\r\n              \"actions\": [\r\n                {\r\n                  \"add\": \"config\",\r\n                  \"mode\": \"light\",\r\n                  \"emotion\": \"\",\r\n                  \"background-image\": \"https://narchart.github.io/editor/background/car_background3.jpg\"\r\n                },\r\n                {\r\n                  \"select\": [\r\n                    {\r\n                      \"field\": \"Horsepower\",\r\n                      \"aggregate\": \"sum\"\r\n                    },\r\n                    {\r\n                      \"field\": \"Miles per Gallon\",\r\n                      \"aggregate\": \"sum\"\r\n                    },\r\n                    {\r\n                      \"field\": \"Acceleration\",\r\n                      \"aggregate\": \"sum\"\r\n                    },\r\n                    {\r\n                      \"field\": \"Weight\",\r\n                      \"aggregate\": \"sum\"\r\n                    },\r\n                    {\r\n                      \"field\": \"Name\"\r\n                    },\r\n                    {\r\n                      \"field\": \"Origin\"\r\n                    }\r\n                  ],\r\n                  \"groupby\": [\r\n                    {\r\n                      \"field\": \"Name\"\r\n                    }\r\n                  ],\r\n                  \"filter\": []\r\n                },\r\n                {\r\n                  \"add\": \"chart\",\r\n                  \"mark\": {\r\n                    \"type\": \"point\",\r\n                    \"style\": {\r\n                      \"fill-opacity\": 0.4,\r\n                      \"stroke-width\": 1,\r\n                      \"stroke-opacity\": 0.7,\r\n                      \"fill\": \"#90E1DC\"\r\n                    }\r\n                  },\r\n                  \"style\": {}\r\n                },\r\n                {\r\n                  \"add\": \"title\",\r\n                  \"style\": {\r\n                    \"text\": \"Some basic information about cars\",\r\n                    \"position\": \"left\",\r\n                    \"font-family\": \"Gil Sans\",\r\n                    \"font-weight\": \"bold\",\r\n                    \"font-size\": 30,\r\n                    \"font-color\": \"#15777C\",\r\n                    \"font-style\": \"italic\",\r\n                    \"border-width\": 2,\r\n                    \"border-color\": \"#15777C\"\r\n                  }\r\n                },\r\n                {\r\n                  \"add\": \"caption\",\r\n                  \"style\": {\r\n                    \"text\": \"The relationship between horsepower, miles per gallon and acceleration.\",\r\n                    \"font-family\": \"Gil Sans\",\r\n                    \"font-size\": 16,\r\n                    \"font-weight\": \"regular\",\r\n                    \"font-color\": \"#364A45\",\r\n                    \"position\": \"left\"\r\n                  }\r\n                },\r\n                {\r\n                  \"add\": \"group\",\r\n                  \"actions\": [\r\n                    {\r\n                      \"add\": \"encoding\",\r\n                      \"channel\": \"x\",\r\n                      \"field\": \"Horsepower\"\r\n                    },\r\n                    {\r\n                      \"add\": \"encoding\",\r\n                      \"channel\": \"y\",\r\n                      \"field\": \"Miles per Gallon\"\r\n                    }\r\n                  ],\r\n                  \"animation\": {\r\n                    \"sync\": false,\r\n                    \"duration\": 1000\r\n                  }\r\n                },\r\n                {\r\n                  \"add\": \"encoding\",\r\n                  \"channel\": \"size\",\r\n                  \"field\": \"Acceleration\",\r\n                  \"animation\": {\r\n                    \"duration\": 1000\r\n                  }\r\n                },\r\n                {\r\n                  \"add\": \"annotation\",\r\n                  \"method\": \"circle\",\r\n                  \"target\": [\r\n                    {\r\n                      \"field\": \"Horsepower\",\r\n                      \"value\": 230\r\n                    }\r\n                  ],\r\n                  \"style\": {\r\n                    \"color\": \"#F9CF00\"\r\n                  }\r\n                },\r\n                {\r\n                  \"add\": \"annotation\",\r\n                  \"method\": \"tooltip\",\r\n                  \"target\": [\r\n                    {\r\n                      \"field\": \"Horsepower\",\r\n                      \"value\": 230\r\n                    }\r\n                  ],\r\n                  \"style\": {\r\n                    \"text\": \"Car name: pontiac grand prix\",\r\n                    \"font-family\": \"Gil Sans\",\r\n                    \"font-size\": 12,\r\n                    \"font-weight\": \"regular\",\r\n                    \"font-color\": \"white\",\r\n                    \"tooltip-color\": \"#00797D\"\r\n                  }\r\n                }\r\n              ]\r\n        }\r\n    }, {   \r\n        title:\"Car sales over the years\",\r\n        chartType:\"scatterplot\",\r\n        specJson:{\r\n            \"data\": {\r\n                \"url\": \"https://narchart.github.io/editor/spreadsheets/cars.csv\",\r\n                \"schema\": [\r\n                  {\r\n                    \"field\": \"Name\",\r\n                    \"type\": \"categorical\"\r\n                  },\r\n                  {\r\n                    \"field\": \"Miles per Gallon\",\r\n                    \"type\": \"numerical\"\r\n                  },\r\n                  {\r\n                    \"field\": \"Cylinders\",\r\n                    \"type\": \"numerical\"\r\n                  },\r\n                  {\r\n                    \"field\": \"Displacement\",\r\n                    \"type\": \"numerical\"\r\n                  },\r\n                  {\r\n                    \"field\": \"Horsepower\",\r\n                    \"type\": \"numerical\"\r\n                  },\r\n                  {\r\n                    \"field\": \"Weight\",\r\n                    \"type\": \"numerical\"\r\n                  },\r\n                  {\r\n                    \"field\": \"Acceleration\",\r\n                    \"type\": \"numerical\"\r\n                  },\r\n                  {\r\n                    \"field\": \"Year\",\r\n                    \"type\": \"temporal\"\r\n                  },\r\n                  {\r\n                    \"field\": \"Origin\",\r\n                    \"type\": \"categorical\"\r\n                  }\r\n                ]\r\n              },\r\n              \"actions\": [\r\n                {\r\n                  \"add\": \"config\",\r\n                  \"mode\": \"dark\",\r\n                  \"emotion\": \"trustworthy\"\r\n                },\r\n                {\r\n                  \"select\": [\r\n                    {\r\n                      \"field\": \"Horsepower\",\r\n                      \"aggregate\": \"sum\"\r\n                    },\r\n                    {\r\n                      \"field\": \"Miles per Gallon\",\r\n                      \"aggregate\": \"sum\"\r\n                    },\r\n                    {\r\n                      \"field\": \"Acceleration\",\r\n                      \"aggregate\": \"sum\"\r\n                    },\r\n                    {\r\n                      \"field\": \"Weight\",\r\n                      \"aggregate\": \"sum\"\r\n                    },\r\n                    {\r\n                      \"field\": \"Name\"\r\n                    },\r\n                    {\r\n                      \"field\": \"Origin\"\r\n                    }\r\n                  ],\r\n                  \"groupby\": [\r\n                    {\r\n                      \"field\": \"Name\"\r\n                    }\r\n                  ],\r\n                  \"filter\": []\r\n                },\r\n                {\r\n                  \"add\": \"chart\",\r\n                  \"mark\": {\r\n                    \"type\": \"point\",\r\n                    \"style\": {\r\n                      \"fill-opacity\": 0.5,\r\n                      \"stroke-color\": \"#FCCF00\",\r\n                      \"stroke-width\": 1\r\n                    }\r\n                  },\r\n                  \"style\": {}\r\n                },\r\n                {\r\n                  \"add\": \"title\",\r\n                  \"style\": {\r\n                    \"text\": \"Cars: MPG vs Horsepower\",\r\n                    \"position\": \"top-center\",\r\n                    \"font-family\": \"Gil Sans\",\r\n                    \"font-weight\": \"bold\",\r\n                    \"font-size\": 30,\r\n                    \"font-color\": \"#FCCF00\",\r\n                    \"font-style\": \"italic\",\r\n                    \"divide-line-width\": 2,\r\n                    \"divide-line-color\": \"#FCCF00\"\r\n                  }\r\n                },\r\n                {\r\n                  \"add\": \"caption\",\r\n                  \"style\": {\r\n                    \"text\": \"The relationship between horsepower and miles per gallon is negative.\",\r\n                    \"font-family\": \"Gil Sans\",\r\n                    \"font-size\": 16,\r\n                    \"font-weight\": \"regular\",\r\n                    \"font-color\": \"#FFFFFF\",\r\n                    \"position\": \"top-center\"\r\n                  }\r\n                },\r\n                {\r\n                  \"add\": \"image\",\r\n                  \"style\": {\r\n                    \"image\": \"https://narchart.github.io/editor/background/arrow.png\",\r\n                    \"x\": 520,\r\n                    \"y\": 123,\r\n                    \"width\": 60,\r\n                    \"height\": 60\r\n                  }\r\n                },\r\n                {\r\n                  \"add\": \"group\",\r\n                  \"actions\": [\r\n                    {\r\n                      \"add\": \"encoding\",\r\n                      \"channel\": \"x\",\r\n                      \"field\": \"Horsepower\"\r\n                    },\r\n                    {\r\n                      \"add\": \"encoding\",\r\n                      \"channel\": \"y\",\r\n                      \"field\": \"Miles per Gallon\"\r\n                    }\r\n                  ],\r\n                  \"animation\": {\r\n                    \"sync\": false,\r\n                    \"duration\": 1000\r\n                  }\r\n                },\r\n                {\r\n                  \"add\": \"encoding\",\r\n                  \"channel\": \"size\",\r\n                  \"field\": \"Acceleration\",\r\n                  \"animation\": {\r\n                    \"duration\": 1000\r\n                  }\r\n                },\r\n                {\r\n                  \"add\": \"annotation\",\r\n                  \"method\": \"regression\",\r\n                  \"target\": [],\r\n                  \"style\": {\r\n                    \"color\": \"white\"\r\n                  },\r\n                  \"animation\": {\r\n                    \"type\": \"wipe\",\r\n                    \"duration\": 2000\r\n                  }\r\n                }\r\n              ]\r\n        }\r\n    }, {   \r\n        title:\"Car sales over the years\",\r\n        chartType:\"scatterplot\",\r\n        specJson:{\r\n            \"data\": {\r\n                \"url\": \"https://narchart.github.io/editor/spreadsheets/cars.csv\",\r\n                \"schema\": [{\r\n                    \"field\": \"Name\",\r\n                    \"type\": \"categorical\"\r\n                  },\r\n                  {\r\n                    \"field\": \"Miles per Gallon\",\r\n                    \"type\": \"numerical\"\r\n                  },\r\n                  {\r\n                    \"field\": \"Cylinders\",\r\n                    \"type\": \"numerical\"\r\n                  },\r\n                  {\r\n                    \"field\": \"Displacement\",\r\n                    \"type\": \"numerical\"\r\n                  },\r\n                  {\r\n                    \"field\": \"Horsepower\",\r\n                    \"type\": \"numerical\"\r\n                  },\r\n                  {\r\n                    \"field\": \"Weight\",\r\n                    \"type\": \"numerical\"\r\n                  },\r\n                  {\r\n                    \"field\": \"Acceleration\",\r\n                    \"type\": \"numerical\"\r\n                  },\r\n                  {\r\n                    \"field\": \"Year\",\r\n                    \"type\": \"temporal\"\r\n                  },\r\n                  {\r\n                    \"field\": \"Origin\",\r\n                    \"type\": \"categorical\"\r\n                  }\r\n                ]\r\n              },\r\n              \"actions\": [{\r\n                  \"add\": \"config\",\r\n                  \"mode\": \"light\",\r\n                  \"emotion\": \"playful\",\r\n                  \"background-image\": \"https://narchart.github.io/editor/background/car_background4.jpg\"\r\n                },\r\n                {\r\n                  \"select\": [{\r\n                      \"field\": \"Horsepower\",\r\n                      \"aggregate\": \"min\"\r\n                    },\r\n                    {\r\n                      \"field\": \"Miles per Gallon\",\r\n                      \"aggregate\": \"min\"\r\n                    },\r\n                    {\r\n                      \"field\": \"Acceleration\",\r\n                      \"aggregate\": \"min\"\r\n                    },\r\n                    {\r\n                      \"field\": \"Weight\",\r\n                      \"aggregate\": \"min\"\r\n                    },\r\n                    {\r\n                      \"field\": \"Name\"\r\n                    },\r\n                    {\r\n                      \"field\": \"Origin\"\r\n                    }\r\n                  ],\r\n                  \"groupby\": [{\r\n                    \"field\": \"Name\"\r\n                  }],\r\n                  \"filter\": []\r\n                },\r\n                {\r\n                  \"add\": \"chart\",\r\n                  \"mark\": {\r\n                    \"type\": \"point\",\r\n                    \"style\": {\r\n                      \"fill-opacity\": 0.5,\r\n                      \"stroke-color\": \"#90A290\",\r\n                      \"stroke-width\": 1\r\n                    }\r\n                  },\r\n                  \"style\": {}\r\n                },\r\n                {\r\n                  \"add\": \"title\",\r\n                  \"style\": {\r\n                    \"text\": \"Association between car weight and horsepower\",\r\n                    \"position\": \"left\",\r\n                    \"font-family\": \"Gil Sans\",\r\n                    \"font-weight\": \"bold\",\r\n                    \"font-size\": 25,\r\n                    \"font-color\": \"white\",\r\n                    \"font-style\": \"italic\",\r\n                    \"background-color\": \"#FE268E\"\r\n                  }\r\n                },\r\n                {\r\n                  \"add\": \"caption\",\r\n                  \"style\": {\r\n                    \"text\": \"The color encodes the origin of the cars.\",\r\n                    \"font-family\": \"Gil Sans\",\r\n                    \"font-size\": 18,\r\n                    \"font-style\": \"italic\",\r\n                    \"font-weight\": \"regular\",\r\n                    \"font-color\": \"#364A45\",\r\n                    \"position\": \"left\"\r\n                  }\r\n                },\r\n                {\r\n                  \"add\": \"group\",\r\n                  \"actions\": [{\r\n                      \"add\": \"encoding\",\r\n                      \"channel\": \"x\",\r\n                      \"field\": \"Horsepower\"\r\n                    },\r\n                    {\r\n                      \"add\": \"encoding\",\r\n                      \"channel\": \"y\",\r\n                      \"field\": \"Weight\"\r\n                    }\r\n                  ],\r\n                  \"animation\": {\r\n                    \"sync\": false,\r\n                    \"duration\": 1000\r\n                  }\r\n                },\r\n                {\r\n                  \"add\": \"encoding\",\r\n                  \"channel\": \"color\",\r\n                  \"field\": \"Origin\",\r\n                  \"animation\": {\r\n                    \"duration\": 1000\r\n                  }\r\n                },\r\n                {\r\n                  \"add\": \"annotation\",\r\n                  \"method\": \"arrow\",\r\n                  \"target\": [{\r\n                    \"field\": \"Weight\",\r\n                    \"value\": 3086\r\n                  }],\r\n                  \"style\": {\r\n                    \"color\": \"#F9CF00\"\r\n                  }\r\n                },\r\n                {\r\n                  \"add\": \"annotation\",\r\n                  \"method\": \"reference\",\r\n                  \"target\": [{\r\n                    \"field\": \"Weight\",\r\n                    \"value\": 3086\r\n                  }],\r\n                  \"style\": {\r\n                    \"color\": \"black\"\r\n                  }\r\n                },\r\n                {\r\n                  \"add\": \"annotation\",\r\n                  \"method\": \"tooltip\",\r\n                  \"target\": [{\r\n                    \"field\": \"Weight\",\r\n                    \"value\": 3086\r\n                  }],\r\n                  \"style\": {\r\n                    \"text\": \"Car name: buick estate wagon(sw)(1970)\",\r\n                    \"font-size\": 11,\r\n                    \"font-weight\": \"bold\",\r\n                    \"font-color\": \"white\",\r\n                    \"tooltip-color\": \"#FE268E\"\r\n                  }\r\n                }\r\n              ]\r\n        }\r\n    }, {   \r\n        title:\"Car sales over the years\",\r\n        chartType:\"scatterplot\",\r\n        specJson:{\r\n            \"data\": {\r\n                \"url\": \"https://narchart.github.io/editor/spreadsheets/cars.csv\",\r\n                \"schema\": [\r\n                  {\r\n                    \"field\": \"Name\",\r\n                    \"type\": \"categorical\"\r\n                  },\r\n                  {\r\n                    \"field\": \"Miles per Gallon\",\r\n                    \"type\": \"numerical\"\r\n                  },\r\n                  {\r\n                    \"field\": \"Cylinders\",\r\n                    \"type\": \"numerical\"\r\n                  },\r\n                  {\r\n                    \"field\": \"Displacement\",\r\n                    \"type\": \"numerical\"\r\n                  },\r\n                  {\r\n                    \"field\": \"Horsepower\",\r\n                    \"type\": \"numerical\"\r\n                  },\r\n                  {\r\n                    \"field\": \"Weight\",\r\n                    \"type\": \"numerical\"\r\n                  },\r\n                  {\r\n                    \"field\": \"Acceleration\",\r\n                    \"type\": \"numerical\"\r\n                  },\r\n                  {\r\n                    \"field\": \"Year\",\r\n                    \"type\": \"temporal\"\r\n                  },\r\n                  {\r\n                    \"field\": \"Origin\",\r\n                    \"type\": \"categorical\"\r\n                  }\r\n                ]\r\n              },\r\n              \"actions\": [\r\n                {\r\n                  \"add\": \"config\",\r\n                  \"mode\": \"dark\",\r\n                  \"emotion\": \"serious\"\r\n                },\r\n                {\r\n                  \"select\": [\r\n                    {\r\n                      \"field\": \"Horsepower\",\r\n                      \"aggregate\": \"sum\"\r\n                    },\r\n                    {\r\n                      \"field\": \"Miles per Gallon\",\r\n                      \"aggregate\": \"sum\"\r\n                    },\r\n                    {\r\n                      \"field\": \"Acceleration\",\r\n                      \"aggregate\": \"sum\"\r\n                    },\r\n                    {\r\n                      \"field\": \"Weight\",\r\n                      \"aggregate\": \"sum\"\r\n                    },\r\n                    {\r\n                      \"field\": \"Name\"\r\n                    },\r\n                    {\r\n                      \"field\": \"Origin\"\r\n                    }\r\n                  ],\r\n                  \"groupby\": [\r\n                    {\r\n                      \"field\": \"Name\"\r\n                    }\r\n                  ],\r\n                  \"filter\": []\r\n                },\r\n                {\r\n                  \"add\": \"chart\",\r\n                  \"mark\": {\r\n                    \"type\": \"point\",\r\n                    \"style\": {\r\n                      \"fill-opacity\": 0.5,\r\n                      \"stroke-width\": 1,\r\n                      \"stroke-color\": \"#FCCF00\"\r\n                    }\r\n                  },\r\n                  \"style\": {}\r\n                },\r\n                {\r\n                  \"add\": \"title\",\r\n                  \"style\": {\r\n                    \"text\": \"Cars: Weight vs Horsepower\",\r\n                    \"position\": \"top-center\",\r\n                    \"background-image\": \"https://narchart.github.io/editor/background/car_banner2.png\",\r\n                    \"font-family\": \"Gil Sans\",\r\n                    \"font-weight\": \"bold\",\r\n                    \"font-size\": 30,\r\n                    \"font-color\": \"#CE5456\",\r\n                    \"font-style\": \"italic\"\r\n                  }\r\n                },\r\n                {\r\n                  \"add\": \"caption\",\r\n                  \"style\": {\r\n                    \"text\": \"The relationship between weight and horsepower is negative.\",\r\n                    \"font-family\": \"Gil Sans\",\r\n                    \"font-size\": 16,\r\n                    \"font-weight\": \"regular\",\r\n                    \"font-color\": \"white\",\r\n                    \"position\": \"top-center\"\r\n                  }\r\n                },\r\n                {\r\n                  \"add\": \"group\",\r\n                  \"actions\": [\r\n                    {\r\n                      \"add\": \"encoding\",\r\n                      \"channel\": \"x\",\r\n                      \"field\": \"Horsepower\"\r\n                    },\r\n                    {\r\n                      \"add\": \"encoding\",\r\n                      \"channel\": \"y\",\r\n                      \"field\": \"Weight\"\r\n                    }\r\n                  ],\r\n                  \"animation\": {\r\n                    \"sync\": false,\r\n                    \"duration\": 1000\r\n                  }\r\n                },\r\n                {\r\n                  \"add\": \"annotation\",\r\n                  \"method\": \"fade\",\r\n                  \"target\": [],\r\n                  \"animation\": {\r\n                    \"duration\": 1000\r\n                  }\r\n                },\r\n                {\r\n                  \"add\": \"annotation\",\r\n                  \"method\": \"fill\",\r\n                  \"target\": [\r\n                    {\r\n                      \"field\": \"Weight\",\r\n                      \"value\": 3086\r\n                    }\r\n                  ],\r\n                  \"style\": {\r\n                    \"color\": \"#CE5456\"\r\n                  },\r\n                  \"animation\": {\r\n                    \"duration\": 1000\r\n                  }\r\n                },\r\n                {\r\n                  \"add\": \"annotation\",\r\n                  \"method\": \"symbol\",\r\n                  \"target\": [\r\n                    {\r\n                      \"field\": \"Weight\",\r\n                      \"value\": 3086\r\n                    }\r\n                  ],\r\n                  \"style\": {\r\n                    \"icon-url\": \"https://narchart.github.io/editor/icon/outlier.png\",\r\n                    \"size\": 30\r\n                  }    \r\n                },\r\n                {\r\n                  \"add\": \"annotation\",\r\n                  \"method\": \"circle\",\r\n                  \"target\": [\r\n                    {\r\n                      \"field\": \"Weight\",\r\n                      \"value\": 3086\r\n                    }\r\n                  ],\r\n                  \"style\": {\r\n                    \"stroke-width\": 2\r\n                  }    }\r\n              ]\r\n        }\r\n    }, {   \r\n        title:\"Car sales over the years\",\r\n        chartType:\"scatterplot\",\r\n        specJson:{\r\n            \"data\": {\r\n                \"url\": \"https://narchart.github.io/editor/spreadsheets/cars.csv\",\r\n                \"schema\": [\r\n                  {\r\n                    \"field\": \"Name\",\r\n                    \"type\": \"categorical\"\r\n                  },\r\n                  {\r\n                    \"field\": \"Miles per Gallon\",\r\n                    \"type\": \"numerical\"\r\n                  },\r\n                  {\r\n                    \"field\": \"Cylinders\",\r\n                    \"type\": \"numerical\"\r\n                  },\r\n                  {\r\n                    \"field\": \"Displacement\",\r\n                    \"type\": \"numerical\"\r\n                  },\r\n                  {\r\n                    \"field\": \"Horsepower\",\r\n                    \"type\": \"numerical\"\r\n                  },\r\n                  {\r\n                    \"field\": \"Weight\",\r\n                    \"type\": \"numerical\"\r\n                  },\r\n                  {\r\n                    \"field\": \"Acceleration\",\r\n                    \"type\": \"numerical\"\r\n                  },\r\n                  {\r\n                    \"field\": \"Year\",\r\n                    \"type\": \"temporal\"\r\n                  },\r\n                  {\r\n                    \"field\": \"Origin\",\r\n                    \"type\": \"categorical\"\r\n                  }\r\n                ]\r\n              },\r\n              \"actions\": [\r\n                {\r\n                  \"add\": \"config\",\r\n                  \"mode\": \"light\",\r\n                  \"emotion\": \"\"\r\n                },\r\n                {\r\n                  \"select\": [\r\n                    {\r\n                      \"field\": \"Horsepower\",\r\n                      \"aggregate\": \"sum\"\r\n                    },\r\n                    {\r\n                      \"field\": \"Miles per Gallon\",\r\n                      \"aggregate\": \"sum\"\r\n                    },\r\n                    {\r\n                      \"field\": \"Acceleration\",\r\n                      \"aggregate\": \"sum\"\r\n                    },\r\n                    {\r\n                      \"field\": \"Weight\",\r\n                      \"aggregate\": \"sum\"\r\n                    },\r\n                    {\r\n                      \"field\": \"Name\"\r\n                    },\r\n                    {\r\n                      \"field\": \"Origin\"\r\n                    }\r\n                  ],\r\n                  \"groupby\": [\r\n                    {\r\n                      \"field\": \"Name\"\r\n                    }\r\n                  ],\r\n                  \"filter\": []\r\n                },\r\n                {\r\n                  \"add\": \"chart\",\r\n                  \"mark\": {\r\n                    \"type\": \"point\",\r\n                    \"style\": {\r\n                      \"fill-opacity\": 0.6,\r\n                      \"stroke-color\": \"#A4A4A4\",\r\n                      \"stroke-width\": 1,\r\n                      \"stroke-opacity\": 0.5,\r\n                      \"fill\": \"#E8E8E8\",\r\n                      \"background-image\": \"https://narchart.github.io/editor/icon/car1.jpg\"\r\n                    }\r\n                  },\r\n                  \"style\": {}\r\n                },\r\n                {\r\n                  \"add\": \"title\",\r\n                  \"style\": {\r\n                    \"text\": \"Association between car weight and horsepower\",\r\n                    \"position\": \"left\",\r\n                    \"font-family\": \"Gil Sans\",\r\n                    \"font-weight\": \"bold\",\r\n                    \"font-size\": 24,\r\n                    \"font-color\": \"black\",\r\n                    \"border-width\": 1,\r\n                    \"border-color\": \"black\"\r\n                  }\r\n                },\r\n                {\r\n                  \"add\": \"caption\",\r\n                  \"style\": {\r\n                    \"text\": \"The relationship between car wight and horsepower is positive.\",\r\n                    \"font-family\": \"Gil Sans\",\r\n                    \"font-size\": 20,\r\n                    \"font-weight\": \"regular\",\r\n                    \"font-color\": \"black\",\r\n                    \"position\": \"left\"\r\n                  }\r\n                },\r\n                {\r\n                  \"add\": \"group\",\r\n                  \"actions\": [\r\n                    {\r\n                      \"add\": \"encoding\",\r\n                      \"channel\": \"x\",\r\n                      \"field\": \"Horsepower\"\r\n                    },\r\n                    {\r\n                      \"add\": \"encoding\",\r\n                      \"channel\": \"y\",\r\n                      \"field\": \"Weight\"\r\n                    }\r\n                  ],\r\n                  \"animation\": {\r\n                    \"sync\": true,\r\n                    \"duration\": 1000\r\n                  }\r\n                }\r\n              ]\r\n        }\r\n    }, {   \r\n        title:\"Car sales over the years\",\r\n        chartType:\"scatterplot\",\r\n        specJson:{\r\n            \"data\": {\r\n                \"url\": \"https://narchart.github.io/editor/spreadsheets/cars.csv\",\r\n                \"schema\": [{\r\n                    \"field\": \"Name\",\r\n                    \"type\": \"categorical\"\r\n                  },\r\n                  {\r\n                    \"field\": \"Miles per Gallon\",\r\n                    \"type\": \"numerical\"\r\n                  },\r\n                  {\r\n                    \"field\": \"Cylinders\",\r\n                    \"type\": \"numerical\"\r\n                  },\r\n                  {\r\n                    \"field\": \"Displacement\",\r\n                    \"type\": \"numerical\"\r\n                  },\r\n                  {\r\n                    \"field\": \"Horsepower\",\r\n                    \"type\": \"numerical\"\r\n                  },\r\n                  {\r\n                    \"field\": \"Weight\",\r\n                    \"type\": \"numerical\"\r\n                  },\r\n                  {\r\n                    \"field\": \"Acceleration\",\r\n                    \"type\": \"numerical\"\r\n                  },\r\n                  {\r\n                    \"field\": \"Year\",\r\n                    \"type\": \"temporal\"\r\n                  },\r\n                  {\r\n                    \"field\": \"Origin\",\r\n                    \"type\": \"categorical\"\r\n                  }\r\n                ]\r\n              },\r\n              \"actions\": [{\r\n                  \"add\": \"config\",\r\n                  \"mode\": \"dark\",\r\n                  \"emotion\": \"playful\"\r\n                },\r\n                {\r\n                  \"select\": [{\r\n                      \"field\": \"Horsepower\",\r\n                      \"aggregate\": \"sum\"\r\n                    },\r\n                    {\r\n                      \"field\": \"Miles per Gallon\",\r\n                      \"aggregate\": \"sum\"\r\n                    },\r\n                    {\r\n                      \"field\": \"Acceleration\",\r\n                      \"aggregate\": \"sum\"\r\n                    },\r\n                    {\r\n                      \"field\": \"Weight\",\r\n                      \"aggregate\": \"sum\"\r\n                    },\r\n                    {\r\n                      \"field\": \"Name\"\r\n                    },\r\n                    {\r\n                      \"field\": \"Origin\"\r\n                    }\r\n                  ],\r\n                  \"groupby\": [{\r\n                    \"field\": \"Name\"\r\n                  }],\r\n                  \"filter\": []\r\n                },\r\n                {\r\n                  \"add\": \"chart\",\r\n                  \"mark\": {\r\n                    \"type\": \"point\",\r\n                    \"style\": {\r\n                      \"fill-opacity\": 0.5,\r\n                      \"stroke-color\": \"#90A290\",\r\n                      \"stroke-width\": 1\r\n                    }\r\n                  },\r\n                  \"style\": {}\r\n                },\r\n                {\r\n                  \"add\": \"title\",\r\n                  \"style\": {\r\n                    \"text\": \"Cars: Weight vs Horsepower\",\r\n                    \"position\": \"left\",\r\n                    \"font-family\": \"Times New Roman\",\r\n                    \"font-weight\": \"bold\",\r\n                    \"font-size\": 44,\r\n                    \"font-color\": \"orange\",\r\n                    \"font-style\": \"italic\"\r\n                  }\r\n                },\r\n                {\r\n                  \"add\": \"caption\",\r\n                  \"style\": {\r\n                    \"text\": \"This scatterplot shows the relationship between car weight and horsepower, and the circle size encodes acceleration.\",\r\n                    \"font-family\": \"Gil Sans\",\r\n                    \"font-size\": 16,\r\n                    \"font-weight\": \"regular\",\r\n                    \"font-color\": \"white\",\r\n                    \"position\": \"right\"\r\n                  }\r\n                },\r\n                {\r\n                  \"add\": \"group\",\r\n                  \"actions\": [{\r\n                      \"add\": \"encoding\",\r\n                      \"channel\": \"x\",\r\n                      \"field\": \"Horsepower\"\r\n                    },\r\n                    {\r\n                      \"add\": \"encoding\",\r\n                      \"channel\": \"y\",\r\n                      \"field\": \"Weight\"\r\n                    },\r\n                    {\r\n                      \"add\": \"encoding\",\r\n                      \"channel\": \"color\",\r\n                      \"field\": \"Origin\"\r\n                    },\r\n                    {\r\n                      \"add\": \"encoding\",\r\n                      \"channel\": \"size\",\r\n                      \"field\": \"Acceleration\"\r\n                    }\r\n                  ],\r\n                  \"animation\": {\r\n                    \"sync\": false,\r\n                    \"duration\": 1000\r\n                  }\r\n                },\r\n                {\r\n                  \"add\": \"annotation\",\r\n                  \"method\": \"symbol\",\r\n                  \"target\": [{\r\n                    \"field\": \"Weight\",\r\n                    \"value\": 3086\r\n                  }],\r\n                  \"style\": {\r\n                    \"icon-url\": \"https://narchart.github.io/editor/icon/outlier.png\",\r\n                    \"size\": 34\r\n                  }\r\n                }\r\n              ]\r\n        }\r\n    },\r\n\r\n]\r\n\r\n\r\n  export default exampleData;","import React, { Component } from 'react';\r\nimport './examples.css';\r\nimport LZString from 'lz-string'\r\nimport exampleData from './examplesData';\r\n\r\nexport default class Examples extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            data_temp: exampleData\r\n        }\r\n    }\r\n    exampleLaunch=(specJson)=>{\r\n        let compressResult = LZString.compressToBase64(JSON.stringify(specJson));\r\n        window.location.href=\"https://narchart.github.io/editor/#/url/\"+compressResult;\r\n        // window.location.href=\"http://localhost:3000/#/url/\"+compressResult;\r\n        window.location.reload()\r\n    }  \r\n    render() {\r\n        const {data_temp} = this.state;\r\n        return( \r\n            <div  className=\"charts-gallery\">\r\n                 {data_temp.map((d,index)=>{\r\n                   let url=  require(\"./examplesImg/gallery\"+index+\".jpg\");\r\n                     return(\r\n                        <div className=\"chart-gallery-grid\" key={\"example\"+index}>\r\n                            <div><img src={url} alt=\"\"/></div> \r\n                            <div className=\"galary-description\">\r\n                                <div className=\"galary-word\" title={d.title}>{d.title}</div>\r\n                                <div className=\"galary-button\"> \r\n                                    <button id=\"gallery-launch\" onClick={()=>this.exampleLaunch(d.specJson)}>Launch</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                     )\r\n                 })}\r\n                </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './playground.css';\r\n\r\nexport default class EditPannel extends Component {\r\n\r\n    endEditing = () => {\r\n        if (this.node) {\r\n            try {\r\n                this.props.onEndEdit(JSON.parse(this.node.innerText));\r\n            } catch (error) {\r\n                console.log(\"json parse error:\" + error);\r\n            }\r\n        }\r\n    }\r\n\r\n    //process json\r\n    syntaxHighlight = (json) => {\r\n        if (typeof json != 'string') {\r\n            json = JSON.stringify(json, undefined, 2);\r\n        }\r\n        json = json.replace(/&/g, '&').replace(/</g, '<').replace(/>/g, '>');\r\n        return json.replace(/(\"(\\\\u[a-zA-Z0-9]{4}|\\\\[^u]|[^\\\\\"])*\"(\\s*:)?|\\b(true|false|null)\\b|-?\\d+(?:\\.\\d*)?(?:[eE][+]?\\d+)?)/g, function (match) {\r\n            var cls = 'number';\r\n            if (/^\"/.test(match)) {\r\n                if (/:$/.test(match)) {\r\n                    cls = 'key';\r\n                } else {\r\n                    cls = 'string';\r\n                }\r\n            } else if (/true|false/.test(match)) {\r\n                cls = 'boolean';\r\n            } else if (/null/.test(match)) {\r\n                cls = 'null';\r\n            }\r\n            return '<span class=\"' + cls + '\">' + match + '</span>';\r\n        });\r\n    }\r\n    render() {\r\n        const { spec } = this.props\r\n        return (\r\n            <pre\r\n                id='jsonInputFile'\r\n                dangerouslySetInnerHTML={{ __html: this.syntaxHighlight(JSON.stringify(spec, null, 2)) }}\r\n                ref={(node) => this.node = node}\r\n                contentEditable={true}\r\n                suppressContentEditableWarning\r\n                onBlur={this.endEditing}>\r\n            </pre>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Chart from './Chart';\r\nimport Examples from './Examples';\r\nimport EditPannel from './EditPannel';\r\nimport SplitPane, { Pane } from 'react-split-pane';\r\nimport './font.css';\r\nimport './playground.css';\r\nimport LZString from 'lz-string'\r\nimport copy from 'copy-to-clipboard'\r\nimport {Modal, Button, message} from 'antd'\r\nimport { jsPDF } from \"jspdf\";\r\nimport { svgAsPngUri } from \"save-svg-as-png\";\r\nimport domtoimage from 'dom-to-image';\r\nimport { saveAs } from 'file-saver';\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  //useParams\r\n} from \"react-router-dom\";\r\n\r\n\r\nexport default class Playground extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let status = 'static';\r\n    let locationHash;\r\n    if(window.location.hash.split(\"/\").length>2){\r\n      locationHash = window.location.hash.substr(6, window.location.hash.length)\r\n    }\r\n    let spec;\r\n    if(locationHash){\r\n      spec = JSON.parse(LZString.decompressFromBase64(locationHash))\r\n    }else{\r\n      spec = require('../spec/scatterplot.json')\r\n    }\r\n   \r\n    this.state = {\r\n      spec: spec,\r\n      status: status,\r\n      shareLink:\"\",\r\n      shareClick: false,\r\n      exportClick:false,\r\n      examplesClick:false,\r\n    };\r\n  }\r\n  \r\n  onEndEdit = (spec) => {\r\n    this.setState({\r\n      spec\r\n    })\r\n  }\r\n  changeStatus = (event) => {\r\n    let { spec, specs } = this.state;\r\n    // spec.chart.duration = event.target.value === 'animation' ? 4000 : 0;\r\n    this.setState({\r\n      status: event.target.value,\r\n      spec: spec,\r\n      specs: specs\r\n    })\r\n  }\r\n  changeStaticSpec = (event) => {\r\n    let spec = require('../spec/' + event.target.value + '.json');\r\n    this.setState({\r\n      spec\r\n    })\r\n  }\r\n  changeSize = (event) => {\r\n    let chart = Object.assign({}, this.state.spec.chart);\r\n    let spec = Object.assign({}, this.state.spec);\r\n    chart.size = event.target.value;\r\n    spec.chart = chart;\r\n    this.setState({\r\n      spec: spec,\r\n    })\r\n  }\r\n  updateChart = () => {\r\n    try{\r\n      if (this.state.status === 'video') {\r\n        this.setState({\r\n          specs: JSON.parse(document.getElementsByTagName('pre')[0].innerText)\r\n        })\r\n      } else {\r\n        this.setState({\r\n          spec: JSON.parse(document.getElementsByTagName('pre')[0].innerText)\r\n        })\r\n      }\r\n    }catch (error) {\r\n      console.log(\"json parse error:\" + error);\r\n  }\r\n    \r\n  }\r\n/** -------------------------------Export ----------------------------------------------*/\r\nexportClick = () => {\r\n  this.setState({\r\n    exportClick:true\r\n  })\r\n}  \r\nexportCancle = () => {\r\n  this.setState({\r\n    exportClick:false\r\n  })\r\n}\r\n/** -------------------------------Share ----------------------------------------------*/\r\n  shareClick = () => {\r\n    let jsonText = this.state.spec;\r\n    let compressResult = LZString.compressToBase64(JSON.stringify(jsonText));\r\n    let url=\"https://narchart.github.io/editor/#/url/\"+compressResult\r\n    // let url=\"http://localhost:3000/#/url/\"+compressResult\r\n    this.setState({\r\n      shareClick:true,\r\n      shareLink: url\r\n    })\r\n  }  \r\n  shareCancle = () => {\r\n    this.setState({\r\n      shareClick:false\r\n    })\r\n  }\r\n  shareLink = () => {\r\n    copy(this.state.shareLink)\r\n    message.success({\r\n      content:\"Copied\",\r\n      style: {\r\n        marginTop: '62px',\r\n      },\r\n    })\r\n\r\n  }\r\n  openLink = () => {\r\n    window.open(this.state.shareLink)\r\n\r\n  }\r\n  /** -------------------------------Examples ----------------------------------------------*/\r\n\r\n  examplesClick = () => {\r\n    this.setState({\r\n      examplesClick:true\r\n    })\r\n  }  \r\n  examplesCancle = () => {\r\n    this.setState({\r\n      examplesClick:false\r\n    })\r\n  }\r\n  // ---------------------------------------------------------------------------------------//\r\n  showGallary = (props) => {\r\n    props.history.push('/gallary')\r\n  }\r\n\r\n  /** -------------------------------Export ----------------------------------------------*/\r\n  covertSVG2Png = () => {\r\n    \r\n        // html2canvas(document.getElementById('demo-chart'),{useCORS:true}).then(function (canvas) {\r\n        //     //获取年月日作为文件名\r\n        //     var timers=new Date();\r\n        //     var fullYear=timers.getFullYear();\r\n        //     var month=timers.getMonth()+1;\r\n        //     var date=timers.getDate();\r\n        //     var randoms=Math.random()+'';\r\n        //     //年月日加上随机数\r\n        //     var numberFileName=fullYear+''+month+date+randoms.slice(3,10);\r\n        //     var imgData=canvas.toDataURL();\r\n        //     //保存图片\r\n        //     var saveFile = function(data, filename){\r\n        //         var save_link = document.createElementNS('http://www.w3.org/1999/xhtml', 'a');\r\n        //         save_link.href = data;\r\n        //         save_link.download = filename;\r\n\r\n        //         var event = document.createEvent('MouseEvents');\r\n        //         event.initMouseEvent('click', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\r\n        //         save_link.dispatchEvent(event);\r\n        //     };\r\n        //     //最终文件名+文件格式\r\n        //     var filename = numberFileName + '.png';\r\n        //     saveFile(imgData,filename);\r\n        //     //document.body.appendChild(canvas);  把截的图显示在网页上\r\n        // })\r\n    const node = document.getElementById('demo-chart')\r\n    // let imgArr=node.querySelectorAll('image')\r\n    // imgArr[1].src=imgArr[1].href.baseVal\r\n\r\n    domtoimage.toBlob(node).then((blob) => {\r\n      // console.log(\"🚀 ~ file: index.js ~ line 210 ~ Playground ~ domtoimage.toBlob ~ blob\", blob)\r\n      // 调用file-save方法 直接保存图片\r\n      saveAs(blob, '自动保存.png')\r\n    })\r\n  }\r\n\r\n  covertSVG2json = () => {\r\n    let inputJson = JSON.stringify(this.state.spec, null, '\\t')\r\n    let fixJson = inputJson.replace(/\\#/g,'%23').replace(/\\?/g,'%3F').replace(/\\&/g,'%26').replace(/\\=/g,'%3D')\r\n    const a = document.createElement('a');\r\n    a.download = 'visualization.json';\r\n    a.href = 'data:application/json;charset=utf-8,' + fixJson;\r\n    a.click();\r\n  }\r\n\r\n  covertSVG2svg = () => {\r\n    let svg = document.querySelector('svg')\r\n    if(svg){\r\n      let svgHtml = svg.outerHTML.replace('<svg ','<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" ')\r\n      const base64doc = btoa(decodeURIComponent(encodeURIComponent(svgHtml)));\r\n      const a = document.createElement('a');\r\n      const e = new MouseEvent('click');\r\n      a.download = 'visualization.svg';\r\n      a.href = 'data:image/svg+xml;base64,' + base64doc;\r\n      a.dispatchEvent(e);\r\n    }\r\n  }\r\n  \r\n  covertSVG2pdf = () => {\r\n    new Promise(async (resolve, reject) => {\r\n    let node = document.querySelector('svg')\r\n    if(node){\r\n      const graph = document.querySelector('svg');\r\n      const pdf = new jsPDF(\"l\", \"pt\", [1000, 1000]);\r\n      const pdfCanvas = document.createElement(\"canvas\");\r\n      pdfCanvas.setAttribute(\"width\", 1000);\r\n      pdfCanvas.setAttribute(\"height\", 1000);\r\n\r\n      const dataURI = await svgAsPngUri(graph);\r\n\r\n      pdf.addImage(dataURI, \"PNG\", 0, 0);\r\n      pdf.save(\"visualization.pdf\");\r\n    }\r\n    })\r\n  }\r\n\r\n  covertSVG2html = () => {\r\n    const svg = document.querySelector('svg')\r\n    if(svg){\r\n      let svgHtml = svg.outerHTML.replace('<svg ','<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" ')\r\n      // let wholeHtml = '<!DOCTYPE html> <html> <head> </head> <body> '+svgHtml+' </body> </html>'\r\n      const base64doc = btoa(decodeURIComponent(encodeURIComponent(svgHtml)));\r\n      const a = document.createElement('a');\r\n      const e = new MouseEvent('click');\r\n      a.download = 'visualization.html';\r\n      a.href = 'data:image/svg+xml;base64,' + base64doc;\r\n      a.dispatchEvent(e);\r\n    }\r\n  }\r\n\r\n  // ---------------------------------------------------------------------------------------//\r\n\r\n  render() {\r\n    const { spec, status, shareClick,examplesClick,exportClick, shareLink } = this.state;\r\n\r\n    let displayview;\r\n    let shownspec;\r\n    switch (status) {\r\n      case 'static':\r\n        shownspec = spec;\r\n        displayview = <Chart spec={spec} />;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    return (\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/*\" render={\r\n            props => {\r\n              return <div style={{ height: \"100%\" }}>\r\n                <div className=\"header\">\r\n                  Narrative Charts\r\n                  <div className='topButton' onClick={this.updateChart} style={{marginLeft:27}}>\r\n                      <div className='topIconRun topIcon' ></div>\r\n                      Run\r\n                  </div>\r\n                  <div className='topButton'onClick={this.exportClick}>\r\n                    <div className='topIconExport topIcon' ></div>\r\n                      Export\r\n                  </div>\r\n                  <div className='topButton' onClick={this.shareClick}>\r\n                    <div className='topIconShare topIcon' ></div>\r\n                      Share\r\n                  </div>\r\n                  <div className='topButton' onClick={this.examplesClick}>\r\n                    <div className='topIconExamples topIcon' ></div>\r\n                      All Examples\r\n                </div>\r\n                <Modal\r\n                  key = {\"modal_share\"}\r\n                  className = {\"share_chart\"}\r\n                  visible={shareClick}\r\n                  // closable = {false}\r\n                  centered\r\n                  title={\"Share\"}\r\n                  onOk={() => this.shareCancle()}\r\n                  onCancel={() => this.shareCancle()}\r\n                  style={{ top:-100}}\r\n                  width={\"calc(100% - 300px)\"}\r\n                  height={\"245px\"}\r\n                  footer={null}\r\n                  >  \r\n                  <hr className=\"modalDivider\"></hr>\r\n                  <div className=\"shareContent\">\r\n                    <p className=\"shareURLTitle\">Share via URL</p>\r\n                    <div className=\"shareButtonMix\">\r\n                      <p className=\"shareLink\">{shareLink}</p>\r\n                      {/* <p>We pack the Narrative Charts specification as an encoded string in the URL. We use a LZ-based compression algorithm. When whitespaces are not preserved, the editor will automatically format the specification when it is loaded.</p> */}\r\n                      <Button className=\"shareButton\" onClick={()=>this.openLink()}>Open Link</Button>\r\n                      <Button className=\"shareButton\" onClick={()=>this.shareLink()}>Copy Link</Button>\r\n                    </div>\r\n                  </div>\r\n              </Modal>\r\n              <Modal\r\n                  key = {\"modal_export\"}\r\n                  className = {\"export_chart\"}\r\n                  title={\"Export\"}\r\n                  centered\r\n                  visible={exportClick}\r\n                  onOk={() => this.exportCancle()}\r\n                  onCancel={() => this.exportCancle()}\r\n                  style={{ top:0}}\r\n                  width={1140}\r\n                  footer={null}\r\n                  >  \r\n                  <hr className=\"modalDivider\"></hr>\r\n                  <div className='exportContent'>\r\n                    <div className='exportPng'>\r\n                      <div className='exportRow'>\r\n                        <div className='exportImage'>\r\n                          <div className='exportPngImage'></div>\r\n                        </div>\r\n                        <div className='exportDescription'>\r\n                          <p><strong>PNG</strong></p>\r\n                          <p>PNG is a bitmap image format which is made up of a fixed number of pixels. They have a fixed resolution and cannot be scaled.</p>\r\n                        </div>\r\n                        <div className='exportButtonBox'>\r\n                          <Button className=\"exportButton\" onClick={()=>this.covertSVG2Png()}>Download</Button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <hr className='exportContentDivider'></hr>\r\n                    <div className='exportJson'>\r\n                      <div className='exportRow'>\r\n                        <div className='exportImage'>\r\n                          <div className='exportJsonImage'></div>\r\n                        </div>\r\n                        <div className='exportDescription'>\r\n                          <p><strong>JSON</strong></p>\r\n                          <p>JSON is a lightweight data-interchange format.</p>\r\n                        </div>\r\n                        <div className='exportButtonBox'>\r\n                          <Button className=\"exportButton\" onClick={()=>this.covertSVG2json()}>Download</Button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <hr className='exportContentDivider'></hr>\r\n                    <div className='exportSvg'>\r\n                      <div className='exportRow'>\r\n                        <div className='exportImage'>\r\n                          <div className='exportSvgImage'></div>\r\n                        </div>\r\n                        <div className='exportDescription'>\r\n                          <p><strong>SVG</strong></p>\r\n                          <p>SVG is a vector image format which uses geometric forms to represent different parts as discrete objects and are infinitely scalable.</p>\r\n                        </div>\r\n                        <div className='exportButtonBox'>\r\n                          <Button className=\"exportButton\" onClick={()=>this.covertSVG2svg()}>Download</Button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <hr className='exportContentDivider'></hr>\r\n                    <div className='exportPdf'>\r\n                      <div className='exportRow'>\r\n                        <div className='exportImage'>\r\n                          <div className='exportPdfImage'></div>\r\n                        </div>\r\n                        <div className='exportDescription'>\r\n                          <p><strong>PDF</strong></p>\r\n                          <p>PDF is a vector format usually used for documents.</p>\r\n                        </div>\r\n                        <div className='exportButtonBox'>\r\n                          <Button className=\"exportButton\" onClick={()=>this.covertSVG2pdf()}>Download</Button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <hr className='exportContentDivider'></hr>\r\n                    <div className='exportHtml'>\r\n                      <div className='exportRow'>\r\n                        <div className='exportImage'>\r\n                          <div className='exportHtmlImage'></div>\r\n                        </div>\r\n                        <div className='exportDescription'>\r\n                          <p><strong>HTML</strong></p>\r\n                          <p>HTML is a document format to be displayed in a browser.</p>\r\n                        </div>\r\n                        <div className='exportButtonBox'>\r\n                          <Button className=\"exportButton\" onClick={()=>this.covertSVG2html()}>Download</Button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                 \r\n              </Modal>\r\n              <Modal\r\n                  key = {\"modal_examples\"}\r\n                  className = {\"examples_chart\"}\r\n                  title={\"Examples\"}\r\n                  centered\r\n                  visible={examplesClick}\r\n                  onOk={() => this.examplesCancle()}\r\n                  onCancel={() => this.examplesCancle()}\r\n                  width={\"calc(100% - 300px)\"}\r\n                  footer={null}\r\n                  >  \r\n                   <hr className=\"modalDivider\"></hr>\r\n                  <Examples/>\r\n                 \r\n              </Modal>\r\n                \r\n                </div>\r\n                <div className='pannelWrapper'>\r\n                  <SplitPane split=\"vertical\">\r\n                    <div className='editPannel'>\r\n                      <EditPannel onEndEdit={this.onEndEdit} spec={shownspec} />\r\n                    </div>\r\n                    <div className='chartPannel'>\r\n                      {displayview}\r\n                     </div>\r\n                  </SplitPane>\r\n                </div>\r\n               \r\n              </div >\r\n            }\r\n          }>\r\n          </Route>\r\n        </Switch>\r\n      </Router >\r\n    )\r\n  }\r\n}\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Playground from './playground';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Playground />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}